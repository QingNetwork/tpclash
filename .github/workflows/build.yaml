name: TPClash

on:
  workflow_dispatch:
    inputs:
      trigger:
        description: Manually trigger
        required: true
        type: choice
        options:
          - build
  issue_comment:
    types: [created]

env:
  FORCE_COLOR: 1
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Reply to Issue Comment
      uses: actions/github-script@v6
      with:
        script: |
          const comment = `@${context.payload.comment.user.login} TPClash 自动构建已开始, 请访问 CI 链接等待构建完成并下载: [Workflow](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment,
          });
    - name: Put back the git branch into git
      shell: bash
      run: |
        branch=""
        if [ -n "$GITHUB_HEAD_REF" ]; then
          branch="$GITHUB_HEAD_REF"
        else
          branch="${GITHUB_REF##*/}"
        fi
        git checkout -b "$branch" || true
    - name: Docker Login
      shell: bash
      run: docker login --username "${DOCKERHUB_USERNAME}" --password "${DOCKERHUB_PASSWORD}"
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    - name: Use Golang
      uses: actions/setup-go@v4
      with:
        go-version: 'stable'
    - name: Install Deps
      shell: bash
      run: |
        npm install -g pnpm @go-task/cli
    - name: Build TPClash
      shell: bash
      run: task
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: TPClash-${{ github.run_number }}-${{ steps.timestamp.outputs.timestamp }}
        path: build
